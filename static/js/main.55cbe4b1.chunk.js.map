{"version":3,"sources":["contexts/CardProvider.js","hooks/useLocalStorage.js","components/Create.js","contexts/ModeProvider.js","hooks/useLocalStorageState.js","components/Header.js","components/FlashCard.js","components/CardContainer.js","App.js","index.js"],"names":["CardContext","createContext","useCards","useContext","CardProvider","children","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useLocalStorage","cards","setCards","createCard","question","answer","prevCards","removeCard","cardArray","subKey","updatedCards","filter","elem","Provider","editCard","editedQ","editedA","useStyles","makeStyles","flex","display","flexDirection","field","marginTop","marginBottom","Create","classes","setQuestion","questionError","setQuestionError","setAnswer","answerError","setAnswerError","showForm","setShowForm","Container","className","onSubmit","e","preventDefault","noValidate","autoComplete","TextField","label","variant","required","error","onChange","target","Button","type","size","color","onClick","ModeContext","useMode","ModeProvider","persistedValue","useLocalStorageState","mode","setMode","toggleMode","justifyContent","alignSelf","paddingTop","background","flexDark","maximized","height","alignItems","maximizedDark","minimized","fontSize","minimizedDark","bordered","Header","document","body","console","log","Box","boxShadow","Typography","length","component","gutterBottom","style","textAlign","box","maxWidth","minWidth","maxHeight","minHeight","border","margin","overFlow","paddingBottom","boxDark","header","padding","text","overflowY","textDark","inputField","outline","fontFamily","borderBottom","resize","inputDark","FlashCard","props","showAnswer","setShowAnswer","showEditing","setShowEditing","questionRef","useRef","answerRef","questionText","align","disableElevation","editForm","onAction","current","ref","defaultValue","rows","Card","flexWrap","width","dark","CardContainer","map","item","i","theme","createMuiTheme","palette","primary","amber","secondary","orange","deepOrange","App","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55cbe4b1.chunk.js","sourcesContent":["import React, { useContext, createContext } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst CardContext = createContext()\n\n\n\nexport const useCards = () => {\n    return useContext(CardContext)\n}\n\nexport function CardProvider({children}) {\n\n    const [cards, setCards] = useLocalStorage('cards', [])\n  \n    const createCard = (question, answer) => {\n        setCards(prevCards => {\n            return [...prevCards, {question, answer}]\n        })\n    }\n\n    const removeCard = (cardArray, subKey) => {\n        const updatedCards = cardArray.filter(elem => {\n            return elem.question !== subKey\n        })\n\n        setCards(updatedCards)\n    }\n    \n    const editCard = (subKey, cardArray, editedQ, editedA) => {\n        removeCard(cardArray, subKey)\n        createCard(editedQ, editedA)\n    }\n\n    return (\n        <CardContext.Provider value={{ cards, createCard, removeCard, editCard }}>\n            {children}\n        </CardContext.Provider>\n    )\n}\n","import { useEffect, useState} from 'react'\n\n\nconst PREFIX = 'flash'\n\nexport default function useLocalStorage(key, initialValue) {\n\n    const prefixedKey = PREFIX + key\n\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n        if (jsonValue !== null) return JSON.parse(jsonValue)\n        return initialValue\n    })\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\n    }, [prefixedKey, value])\n\n    return [value, setValue]\n}\n","import React, { useState } from 'react'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\nimport { useCards } from '../contexts/CardProvider'\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n    flex: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column'\n    },\n    field: {\n        marginTop: 5,\n        marginBottom: 10,\n    }\n})\n\nexport default function Create() {\n\n\n    const { createCard } = useCards()\n    const classes = useStyles()\n\n    const [question, setQuestion] = useState()\n    const [questionError, setQuestionError] = useState()\n    const [answer, setAnswer] = useState()\n    const [answerError, setAnswerError] = useState()\n\n    const [showForm, setShowForm] = useState(false)\n\n    const handleShow = () => {\n        showForm ? setShowForm(false) : setShowForm(true)\n    }\n\n    // check if fields are empty, then submit, hide form and set field values to null\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setQuestionError(false)\n        setAnswerError(false)\n\n        if (!question) {\n            setQuestionError(true)\n            return\n        }\n        if (!answer) {\n            setAnswerError(true)\n            return\n        }\n\n        createCard(question, answer)\n        setShowForm(false)\n        setQuestion(null)\n        setAnswer(null)\n    }\n\n\n    return (\n       <Container >\n    \n        {\n            showForm ?\n            <form className={classes.flex} onSubmit={handleSubmit} noValidate autoComplete=\"off\" >\n                <TextField className={classes.field} label=\"new question\" variant=\"outlined\" required\n                error={questionError}\n                onChange={(e) => {setQuestion(e.target.value)}}    \n                />\n                <TextField className={classes.field} label=\"answer\" variant=\"outlined\" required\n                error={answerError}\n                onChange={(e) => {setAnswer(e.target.value)}}    \n                />\n                <Button type=\"submit\">save</Button>\n            </form> :\n            <Button size=\"large\" variant=\"outlined\" color=\"white\" onClick={handleShow}><AddIcon /></Button>\n\n        }\n\n      </Container>\n    )\n}\n","import React, { useContext, createContext} from 'react'\nimport useLocalStorageState from '../hooks/useLocalStorageState'\n\n\nconst ModeContext = createContext()\n\n\nexport const useMode = () => {\n    return useContext(ModeContext)\n}\nexport function ModeProvider({children}) {\n\n    const [mode, setMode] = useLocalStorageState('mode', 'lightMode')\n\n\n    const toggleMode = (e) => {\n        mode === 'lightMode' ? setMode('darkMode') : setMode('lightMode')\n        // setMode(e.currentTarget.value)\n    }\n\n    return (\n      \n        <ModeContext.Provider value={{ mode, toggleMode }}>\n            {children}\n        </ModeContext.Provider>\n            \n\n    )\n}\n","import { useEffect, useState} from 'react'\n\n\n\nexport default function useLocalStorageState(key, initialValue) {\n\n    const [value, setValue] = useState(() => {\n        const persistedValue = localStorage.getItem(key)\n        return persistedValue !== null ?  persistedValue : initialValue\n    })\n\n    useEffect(() => {\n        localStorage.setItem(key, value)\n    }, [key, value])\n\n    return [value, setValue]\n}\n","import React, { useEffect } from 'react'\nimport { Typography, Container, Box, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core'\nimport Create from './Create'\nimport { useCards } from '../contexts/CardProvider'\nimport { useMode } from '../contexts/ModeProvider'\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\n\n\n\nconst useStyles = makeStyles({\n    flex: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignSelf: 'center',\n        flex: 1,\n        paddingTop: 20,\n        background: '#598072',\n    },\n    flexDark: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignSelf: 'center',\n        flex: 1,\n        paddingTop: 20,\n        background: 'rgb(25, 50, 70)',\n    },\n    maximized: {\n        height: '45vh',\n        background: '#598072',\n        alignItems: 'center'\n    },\n    maximizedDark: {\n        height: '45vh',\n        background: 'rgb(25, 50, 70)',\n        alignItems: 'center'\n    },\n    minimized: {\n        height: '20vh',\n        background: '#598072',\n        alignItems: 'center',\n        fontSize: '60px'\n    },\n    minimizedDark: {\n        height: '20vh',\n        alignItems: 'center',\n        fontSize: '60px',\n        background: 'rgb(25, 50, 70)',\n    },\n    bordered: {\n\n    }\n})\n\n\nexport default function Header() {\n\n    const classes = useStyles()\n    const { cards } = useCards()\n    const { mode, toggleMode } = useMode()\n\n\n    useEffect(() => {\n      document.body.className = mode\n      console.log(mode)\n    }, [mode])\n\n  \n    return (\n        <Box boxShadow={4}>\n            <Box className={mode === 'darkMode' ? classes.flexDark : classes.flex}>\n                    <Container className={classes.bordered}>\n                        <Typography \n                            className={cards.length > 0 ? \n                            (mode === 'darkMode' ? classes.minimizedDark : classes.minimized) : \n                            (mode === 'darkMode' ? classes.maximizedDark : classes.maximized) } \n                            variant=\"h1\" \n                            component=\"h2\" \n                            color=\"secondary\" \n                            gutterBottom>\n                            <div>\n                            <Button onClick={toggleMode} value=\"lightMode\">\n                              { mode === 'darkMode' ? <Brightness7Icon fontSize=\"large\" /> : <Brightness2Icon fontSize=\"large\" color=\"grey\" /> }  \n                            </Button>\n                            </div>\n                            <div style={{textAlign: 'center'}}>flashcards</div>\n                        </Typography> \n                    </Container>\n                    <Container className={classes.bordered}><Create /></Container>\n            </Box>\n        </Box>\n    )\n}\n","import React, { useState, useRef } from 'react'\nimport { Box, Typography, Button, Card } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { useCards } from '../contexts/CardProvider'\nimport { useMode } from '../contexts/ModeProvider'\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles({\n    box: {\n        maxWidth: '330px',\n        minWidth: '330px',\n        maxHeight: '330px',\n        minHeight: '220px',\n        border: '1px black primary',\n        background: '#f4f4f4',\n        margin: 20,\n        textAlign: 'center',\n        overFlow: 'hidden',\n        paddingBottom: 20\n    },\n    boxDark: {\n        maxWidth: '330px',\n        minWidth: '330px',\n        maxHeight: '300px',\n        minHeight: '220px',\n        border: '1px black primary',\n        margin: 20,\n        textAlign: 'center',\n        overFlow: 'hidden',\n        paddingBottom: 20,\n        background: 'rgb(50,50,50)'\n    },\n    header: {\n        fontSize: 24,\n        padding: 10,\n        margin: 10,\n        color: 'teal',\n    },\n    text: {\n        fontSize: 16,\n        padding: 10,\n        margin: 15,\n        overflowY: 'auto',\n        maxHeight: '150px',\n        textAlign: 'left'\n    },\n    textDark: {\n        fontSize: 16,\n        padding: 10,\n        margin: 15,\n        color: 'rgb(220,220,220)',\n        overflowY: 'auto',\n        maxHeight: '150px',\n        textAlign: 'left'\n    },\n    flex: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        background: '#e9e9e9'\n    },\n    flexDark: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        background: 'rgb(80,80,80)'\n    },\n\n    \n})\n\nconst inputField = {\n    border: '0',\n    outline: 'none',\n    fontSize: 16,\n    marginTop: 15,\n    padding: 7,\n    fontFamily: 'monospace',\n    background: 'rgba(0,0,0,0)',\n    borderBottom: '1px solid grey',\n    resize: 'none'\n}\n\nconst inputDark = {\n    border: '0',\n    outline: 'none',\n    fontSize: 16,\n    marginTop: 15,\n    padding: 7,\n    fontFamily: 'monospace',\n    background: 'rgba(0,0,0,0)',\n    borderBottom: '1px solid grey',\n    resize: 'none',\n    color: 'rgb(230,230,230)'\n}\nexport default function FlashCard(props) {\n\n    const classes = useStyles()\n    const { createCard } = useCards()\n    const { mode } = useMode()\n    const [showAnswer, setShowAnswer] = useState(false)\n    const [showEditing, setShowEditing] = useState(false)\n\n    const questionRef = useRef()\n    const answerRef = useRef()\n\n    const [question, setQuestion] = useState()\n    const [answer, setAnswer] = useState()\n\n    const handleShowAnswer = () =>  {\n        showAnswer ? setShowAnswer(false) : setShowAnswer(true)\n    }\n\n    const handleShowEditing= () => {\n        setShowEditing(true)\n    }\n\n    // delete old entry, replace with a new one\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        props.onAction()\n        createCard(questionRef.current.value, answerRef.current.value)\n        setShowEditing(false)\n    }\n\n    const questionText = (<>\n                            <Typography className={classes.header}>{props.question}</Typography>\n                            <Button \n                                variant=\"contained\" \n                                color=\"primary\" \n                                align=\"center\" \n                                onClick={handleShowAnswer}\n                                disableElevation> { showAnswer ? <VisibilityOffIcon /> : <VisibilityIcon /> } answer </Button>\n                            { showAnswer && <Typography className={ mode === 'darkMode' ? classes.textDark : classes.text }>{props.answer}</Typography> } \n                        </>)\n\n    const editForm = (<form style={{display: 'flex', flexDirection: 'column', margin: '20px'}} onSubmit={handleSubmit}>\n\n                            <input \n                            style={mode === 'darkMode' ? inputDark : inputField} \n                            ref={questionRef} \n                            defaultValue={props.question} \n                            onChange={(e) => setQuestion(e.target.value)} />\n\n                           <textarea \n                            style={mode === 'darkMode' ? inputDark : inputField}\n                            rows=\"7\"\n                            ref={answerRef} \n                            defaultValue={props.answer} \n                            onChange={(e) => setAnswer(e.target.value)} />\n\n                            <Button type=\"submit\">Save</Button>\n\n                        </form> )\n\n    return (\n        <Card boxShadow={4} className={mode === 'darkMode' ? classes.boxDark : classes.box }>\n           <Box className={mode === 'darkMode' ? classes.flexDark :  classes.flex }>\n                 \n                <Button onClick={handleShowEditing}><EditIcon /></Button>\n\n                <Button onClick={props.onAction}><DeleteOutlineIcon /></Button>\n            </Box> \n            {\n                showEditing ? editForm : questionText\n            }\n        </Card>\n    )\n}\n","import React from 'react'\nimport FlashCard from './FlashCard'\nimport { Box } from '@material-ui/core'\nimport { useCards } from '../contexts/CardProvider'\nimport { makeStyles } from '@material-ui/core'\nimport { useMode } from '../contexts/ModeProvider'\n\n\nconst useStyles = makeStyles({\n    flex: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        width: '100%',\n        marginTop: 20\n    },\n    dark: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        flexWrap: 'wrap',\n        width: '100%',\n         height: '100vh',\n        background: 'rgb(20,20,20)',\n        color: 'white'\n    },\n\n})\n\n\nexport default function CardContainer() {\n\n    const classes = useStyles()\n    const { cards } = useCards()\n    const { removeCard } = useCards()\n    const { mode } = useMode()\n\n    // delete card\n    const handleAction = (elem) => {\n      removeCard(cards, elem.question)     \n    }\n\n\n    return (\n        <Box className={mode === 'darkMode' ? classes.dark : classes.flex }>\n            <Box>\n            {\n                cards.map((item, i) => {\n                    return <FlashCard \n                            key={i} \n                            question={item.question} \n                            answer={item.answer} \n                            onAction={() => handleAction(item)} \n                            />\n                })  \n            }\n            </Box>\n        </Box>\n \n    )\n}\n","\nimport Header from './components/Header'\nimport CardContainer from './components/CardContainer'\nimport { CardProvider } from './contexts/CardProvider'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\nimport { orange, amber,deepOrange } from '@material-ui/core/colors';\nimport { ModeProvider } from './contexts/ModeProvider'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: amber,\n    secondary: orange,\n    error: deepOrange\n  },\n})\n\n\nfunction App() {\n\n  return (\n    <ModeProvider>\n      <ThemeProvider theme={theme}>\n      <CardProvider>\n        <div className=\"App\">\n          <Header />\n          <CardContainer />\n        </div>\n        </CardProvider>\n      </ThemeProvider>\n    </ModeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}